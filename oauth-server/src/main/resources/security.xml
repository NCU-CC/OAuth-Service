<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.1.xsd
        http://www.springframework.org/schema/security/oauth2
        http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

    <security:http pattern="/jsp/*" security="none" />
    <security:http pattern="/resource/*" security="none" />

    <security:http pattern="/oauth/token"
                   create-session="stateless"
                   authentication-manager-ref="oauth2AuthenticationManager"
                   entry-point-ref="oauth2AuthenticationEntryPoint">
        <security:intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY"/>
        <security:anonymous enabled="false"/>
        <security:access-denied-handler ref="oauth2AccessDeniedHandler"/>
    </security:http>

    <security:http disable-url-rewriting="true"
                   authentication-manager-ref="authenticationManager">
        <security:intercept-url pattern="/oauth/**" access="ROLE_USER"/>
        <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:logout/>
        <security:anonymous/>
        <security:openid-login login-page="https://portal.ncu.edu.tw/endpoint"
                               user-service-ref="clientDetailsUserService">
            <security:attribute-exchange identifier-match="https://portal.ncu.edu.tw/.*">
                <security:openid-attribute name="student_id" type="http://axschema.org/student/id" required="true"/>
            </security:attribute-exchange>
        </security:openid-login>
        <security:access-denied-handler ref="oauth2AccessDeniedHandler"/>
    </security:http>

    <!-- authentication manager -->

    <security:authentication-manager id="oauth2AuthenticationManager">
        <security:authentication-provider user-service-ref="clientDetailsUserService" />
    </security:authentication-manager>

    <security:authentication-manager alias="authenticationManager">
        <!--<security:authentication-provider user-service-ref="userService">-->
            <!--<security:password-encoder hash="md5"/>-->
        <!--</security:authentication-provider>-->
    </security:authentication-manager>

    <!-- oauth2 server -->

    <oauth2:authorization-server  user-approval-page="oauth_approval"
                                  user-approval-handler-ref="oauthUserApprovalHandler"
                                  client-details-service-ref="clientDetails"
                                  token-services-ref="tokenServices">
        <oauth2:authorization-code authorization-code-services-ref="authorizationCodeServices" />
    </oauth2:authorization-server>

    <oauth2:resource-server id="resourceServerFilter" resource-id="user" token-services-ref="tokenServices" />

    <!-- entry point -->

    <bean id="oauth2AccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>
    <bean id="oauth2AuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint"/>

    <!-- client detail service -->

    <bean id="clientDetails" class="org.springframework.security.oauth2.provider.client.JdbcClientDetailsService">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="clientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <constructor-arg ref="clientDetails" />
    </bean>

    <!-- user approval -->

    <bean id="oauthUserApprovalHandler" class="org.springframework.security.oauth2.provider.approval.DefaultUserApprovalHandler"/>

    <!-- token services -->

    <bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
        <constructor-arg ref="dataSource" />
    </bean>

    <bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="tokenStore" />
        <property name="supportRefreshToken" value="false" />
        <property name="clientDetailsService" ref="clientDetails"/>
        <property name="accessTokenValiditySeconds" value="0" />
    </bean>

    <bean id="authorizationCodeServices" class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices">
        <constructor-arg ref="dataSource"/>
    </bean>

</beans>